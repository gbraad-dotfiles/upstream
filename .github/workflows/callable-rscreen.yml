name: Callable - Run dotfiles on runner with rscreen

on:
  workflow_dispatch:
    inputs:
      runs-on:
        description: "Target runner"
        required: true
        type: string
        default: "ubuntu-latest"
      cleanup:
        description: "If true, removes unwanted stuff (snap, lxd, multipass, etc)"
        required: false
        type: boolean
        default: false
        
defaults:
  run:
    shell: bash

jobs:
  dotfiles-test:
    runs-on: ${{ inputs.runs-on }}
    
    steps:

      - name: Enable linger and create user session (workaround)
        uses: gbraad-actions/blacksmith-user-session@main  
      
      - name: Allow unprivileged userns (workaround)
        uses: gbraad-actions/warpbuild-unprivileged-userns@main

      - name: Remove unwanted stuff
        if: ${{ inputs.cleanup  }}
        uses: gbraad-actions/remove-unwanted@v1

      - name: Get last 3 chars of hostname
        id: runner_id
        run: |
          echo "last3=${HOSTNAME: -3}" >> $GITHUB_OUTPUT

      - name: Tailscale
        uses: gbraad-actions/tailscale-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
          args: --ssh --accept-dns=false --operator=runner --advertise-exit-node
          hostname: "dotrunner-${{ steps.runner_id.outputs.last3 }}"

      - name: Create and share userdirs
        run: |
          cd ${{ github.workspace }}
          mkdir -p Projects Documents Downloads
          ln -s ${{ github.workspace }}/Projects  ${HOME}/Projects
          ln -s ${{ github.workspace }}/Documents ${HOME}/Documents
          ln -s ${{ github.workspace }}/Downloads ${HOME}/Downloads
          tailscale drive share projects ${HOME}/Projects
          tailscale drive share documents ${HOME}/Documents
          tailscale drive share downloads ${HOME}/Downloads

      - name: Dotfiles 'dotscreen' requirements
        run: |
          # This should actually be handled by the 'dotscreen' command
          sudo apt install -y zsh fzf
          pip install --user powerline-status --break-system-packages

      - name: Workaround - fixes compaudit
        run: |
          sudo chmod go-w /usr/share/zsh/vendor-completions
          sudo chmod go-w /usr/share/zsh
          # for blackmsith and warpbuild
          if [ -d /home/linuxbrew/ ]; then
            sudo chmod go-w /home/linuxbrew/.linuxbrew/share/zsh/site-functions
            sudo chmod go-w /home/linuxbrew/.linuxbrew/share/zsh
            sudo chmod go-w /home/linuxbrew/.linuxbrew/share/zsh/site-functions/_brew
          fi

      - name: Hang around
        run: |
          IP=`tailscale ip -4`
          echo "Use the following command to connect \`tailscale ssh runner@${IP}\`, \`rshell runner@${IP}\` or \`rscreen runner@${IP}\`"
          sleep 18000

      - name: Message user; 1 hour
        run: |
          sudo wall "about 1 hour remaining"
          sleep 1800

      - name: Message user; 20 minutes
        run: |
          sudo wall "20 minutes remaining"
          sleep 1200

      - name: Upload Artifact - Projects
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: projects
          path: ${{ github.workspace }}/Projects/
          retention-days: 1
          include-hidden-files: true
  
      - name: Upload Artifact - Documents
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: documents
          path: ${{ github.workspace }}/Documents/
          retention-days: 1
          include-hidden-files: true

      - name: Upload Artifact - Downloads
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: downloads
          path: ${{ github.workspace }}/Downloads/
          retention-days: 1
          include-hidden-files: true

      - name: Hang around
        run: |
          sleep infinity
