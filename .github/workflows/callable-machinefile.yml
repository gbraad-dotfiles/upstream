name: Callable - Run dotfiles using machinefile

on:
  workflow_dispatch:
    inputs:
      runs-on:
        description: "Target runner"
        required: true
        type: string
        default: "ubuntu-latest"
      sudo-change-shell:
        description: "Whether to use sudo for chsh"
        required: false
        type: boolean
        default: true
      cleanup:
        description: "If true, removes unwanted stuff (snap, lxd, multipass, etc)"
        required: false
        type: boolean
        default: false

defaults:
  run:
    shell: bash

jobs:
  dotfiles-test:
    runs-on: ${{ inputs.runs-on }}
    
    steps:

      - name: Enable linger and create user session (workaround)
        uses: gbraad-actions/blacksmith-user-session@main
      
      - name: Allow unprivileged userns (workaround)
        uses: gbraad-actions/warpbuild-unprivileged-userns@main

      - name: Remove unwanted stuff
        if: ${{ inputs.cleanup  }}
        uses: gbraad-actions/remove-unwanted@v1

      - name: Get last 3 chars of hostname
        id: runner_id
        run: |
          echo "last3=${HOSTNAME: -3}" >> $GITHUB_OUTPUT

      - name: Tailscale
        uses: gbraad-actions/tailscale-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
          args: --ssh --accept-dns=false --operator=runner --advertise-exit-node
          hostname: "dotrunner-${{ steps.runner_id.outputs.last3 }}"

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Run Dockerfile commands
        uses: gbraad-actions/machinefile-executor-action@v2
        with:
          containerfile: '.devcontainer/ubuntu/Containerfile'
          context: '.'
          arguments: --arg=USERID=1002
      
      - name: Create and share userdirs
        run: |
          cd ${{ github.workspace }}
          mkdir -p Projects Documents Downloads
          ln -s ${{ github.workspace }}/Projects  ${HOME}/Projects
          ln -s ${{ github.workspace }}/Documents ${HOME}/Documents
          ln -s ${{ github.workspace }}/Downloads ${HOME}/Downloads
          sudo ln -s ${{ github.workspace }}/Projects  ~gbraad/Projects
          sudo ln -s ${{ github.workspace }}/Documents ~gbraad/Documents
          sudo ln -s ${{ github.workspace }}/Downloads ~gbraad/Downloads
          sudo chmod 755 /home/runner
          sudo chmod 777 ${{ github.workspace }}/Projects
          sudo chmod 777 ${{ github.workspace }}/Documents
          sudo chmod 777 ${{ github.workspace }}/Downloads
          tailscale drive share projects  ${{ github.workspace }}/Projects
          tailscale drive share documents ${{ github.workspace }}/Documents
          tailscale drive share downloads ${{ github.workspace }}/Downloads

      - name: Dotfiles (install from checkout)
        run: |
          ./install.sh
          if [ "${SUDO_CHANGE_SHELL}" = "true" ]; then
            sudo chsh -s "$(which zsh)"
          else
            chsh -s "$(which zsh)"
          fi
        env:
          SUDO_CHANGE_SHELL: ${{ inputs.sudo-change-shell }}

      - name: Write machinekey
        uses: gbraad-dotfiles/machinekey-action@main
        with:
          ssh_private_key: ${{ secrets.SSH_MACHINE_PRIVATE }}
          ssh_public_key: ${{ secrets.SSH_MACHINE_PUBLIC }}

      - name: Workaround - fixes compaudit
        run: |
          sudo chmod go-w /usr/share/zsh/vendor-completions
          sudo chmod go-w /usr/share/zsh
          #sudo chmod go-w /home/linuxbrew/.linuxbrew/share/zsh/site-functions
          #sudo chmod go-w /home/linuxbrew/.linuxbrew/share/zsh
          #sudo chmod go-w /home/linuxbrew/.linuxbrew/share/zsh/site-functions/_brew

      - name: Install required virtualization software
        continue-on-error: true
        uses: gbraad-actions/setup-virtualization@v2

      - name: Install containers tools (optional)
        continue-on-error: true
        uses: gbraad-actions/setup-container-tools@v1

      - name: Codium Server
        uses: gbraad-actions/codium-server-action@v1

      - name: Jupyter Notebook
        uses: gbraad-actions/jupyter-action@v1

      - name: Hang around
        run: |
          IP=`tailscale ip -4`
          echo "Use the following command to connect \`tailscale ssh gbraad@${IP}\`, \`rscreen gbraad@${IP}\`, \`tailscale ssh runner@${IP}\` or \`rscreen runner@${IP}\`"
          sleep 18000

      - name: Message user; 1 hour
        run: |
          sudo wall "about 1 hour remaining"
          sleep 1800

      - name: Message user; 20 minutes
        run: |
          sudo wall "20 minutes remaining"
          sleep 1200

      - name: Upload Artifact - Projects
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: projects
          path: ${{ github.workspace }}/Projects/
          retention-days: 1
          include-hidden-files: true
  
      - name: Upload Artifact - Documents
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: documents
          path: ${{ github.workspace }}/Documents/
          retention-days: 1
          include-hidden-files: true

      - name: Upload Artifact - Downloads
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: downloads
          path: ${{ github.workspace }}/Downloads/
          retention-days: 1
          include-hidden-files: true

      - name: Hang around
        run: |
          sleep infinity
